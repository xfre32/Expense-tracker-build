{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","filteredExpenses","length","map","expense","id","ExpensesFilter","value","currentYear","onChange","event","onSaveFilter","target","ChartBar","barHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpenseChart","chartDataPoints","expenses","getMonth","Expenses","useState","filterYear","setFilterYear","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","addMode","setAddMode","receivedData","random","onAddExpenseData","Dummy_Array","App","setExpenses","fontFamily","color","textAlign","prevItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d328280a.chunk.js","sourcesContent":["function Card(props) {\r\n    const classes = \"card \" + props.className;\r\n    return(\r\n        <div className={classes}>{props.children}</div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from '../UI/Card';\r\nimport './ExpenseDate.css'\r\n\r\nfunction ExpenseDate(props) {\r\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return(\r\n        <Card className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n        </Card>\r\n    );\r\n\r\n}\r\n\r\nexport default ExpenseDate;","import ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nfunction ExpenseItem(props) {\r\n    return(\r\n        <li>\r\n            <Card className=\"expense-item\">\r\n                <ExpenseDate date={props.date} />\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"expense-item__price\">${props.amount}</div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import ExpenseItem from \"./ExpenseItem\";\r\nimport './ExpensesList.css';\r\n\r\nfunction ExpensesList(props) {\r\n    if(props.filteredExpenses.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">No Expenses found.</h2> \r\n    }\r\n    return(\r\n        <ul className=\"expenses-list\">\r\n            {props.filteredExpenses.map(expense => <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date}/>)}\r\n        </ul>\r\n    );\r\n\r\n}\r\n\r\nexport default ExpensesList; ","import './ExpensesFilter.css';\r\n\r\nfunction ExpensesFilter (props) {\r\n    function filterHandler(event) {\r\n        props.onSaveFilter(event.target.value);\r\n    }\r\n    return (\r\n        <div className='expenses-filter'>\r\n            <div className='expenses-filter__control'>\r\n                <label>Filter by year</label>\r\n                <select value={props.currentYear} onChange={filterHandler}>\r\n                <option value='2022'>2022</option>\r\n                <option value='2021'>2021</option>\r\n                <option value='2020'>2020</option>\r\n                <option value='2019'>2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ChartBar.css';\r\n\r\nfunction ChartBar(props) {\r\n    let barHeight = '0%';\r\n\r\n    if(props.maxValue > 0) {\r\n        barHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return(\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{height: barHeight}}>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default ChartBar;","import ChartBar from \"./ChartBar\";\r\nimport './Chart.css';\r\n\r\nfunction Chart(props) {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nfunction ExpenseChart(props) {\r\n    const chartDataPoints = [\r\n        { label: 'Jan', value: 0 },\r\n        { label: 'Feb', value: 0 },\r\n        { label: 'Mar', value: 0 },\r\n        { label: 'Apr', value: 0 },\r\n        { label: 'May', value: 0 },\r\n        { label: 'Jun', value: 0 },\r\n        { label: 'Jul', value: 0 },\r\n        { label: 'Aug', value: 0 },\r\n        { label: 'Sep', value: 0 },\r\n        { label: 'Oct', value: 0 },\r\n        { label: 'Nov', value: 0 },\r\n        { label: 'Dec', value: 0 },    \r\n    ];\r\n\r\n    for(const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return(\r\n        <Chart dataPoints={chartDataPoints}/>\r\n    );\r\n}\r\n\r\nexport default ExpenseChart;","import { useState } from \"react\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpenseChart from \"./ExpenseChart\";\r\nimport Card from \"../UI/Card\";\r\nimport './Expenses.css';\r\n\r\nfunction Expenses(props) {\r\n    const [filterYear, setFilterYear] = useState('2021');\r\n\r\n    function saveFilterHandler(filter) {\r\n        setFilterYear(filter);\r\n    }\r\n\r\n    const filteredExpenses = props.expenses.filter(expense => expense.date.getFullYear().toString() === filterYear);\r\n\r\n    return(\r\n        <div>\r\n            <Card className=\"expenses\">\r\n                <ExpensesFilter currentYear={filterYear} onSaveFilter={saveFilterHandler}/>\r\n                <ExpenseChart expenses={filteredExpenses}/>\r\n                <ExpensesList filteredExpenses={filteredExpenses}/>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Expenses;","import { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nfunction ExpenseForm(props) {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate,  setEnteredDate] = useState('');\r\n    \r\n    function titleHandler(event) {\r\n        setEnteredTitle(event.target.value);\r\n    }\r\n    function amountHandler(event) {\r\n        setEnteredAmount(event.target.value)\r\n    }\r\n    function dateHandler(event) {\r\n        setEnteredDate(event.target.value)\r\n    }\r\n    function submitHandler(event) {\r\n        event.preventDefault();\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate)\r\n        }\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n\r\n    }\r\n    \r\n    return(\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" value={enteredTitle} onChange={titleHandler}/>\r\n                </div>                \r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateHandler}/>\r\n                </div>                \r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button onClick={props.onCancel} type=\"button\">Cancel</button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ExpenseForm;","import { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport './NewExpense.css';\r\n\r\nfunction NewExpense(props) {\r\n    const[addMode, setAddMode] = useState(false);\r\n\r\n    function saveExpenseDataHandler(receivedData) {\r\n        const expenseData = {\r\n            ...receivedData,\r\n            id: Math.random().toString()\r\n        }\r\n        props.onAddExpenseData(expenseData);\r\n        setAddMode(false);\r\n    }\r\n\r\n    function clickHanlder() {\r\n        setAddMode(true);\r\n    }\r\n\r\n    function cancelHandler() {\r\n        setAddMode(false)\r\n    }\r\n\r\n    return(\r\n        <div className=\"new-expense\">\r\n            {addMode === false && <button onClick={clickHanlder}>Add a new Expense</button>}\r\n            {addMode === true && <ExpenseForm onCancel={cancelHandler} onSaveExpenseData={saveExpenseDataHandler}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewExpense; ","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst Dummy_Array = [\n  {\n    id: 'e4',\n    title: 'A Book',\n    amount: 7.07,\n    date: new Date(2021, 5, 29),\n  },\n  {\n    id: 'e3',\n    title: 'Haircut',\n    amount: 8.75,\n    date: new Date(2021, 5, 28),\n  },\n  { \n    id: 'e2', \n    title: 'Boat Headphones', \n    amount: 25.58, \n    date: new Date(2021, 4, 29) \n  },\n  {\n    id: 'e1',\n    title: 'Ergonomic chair',\n    amount: 49.68,\n    date: new Date(2021, 4, 3),\n  },\n]\n\nfunction App() {\n  const [expenses, setExpenses] = useState(Dummy_Array);\n  \n  function addExpenseDataHandler(receivedData) {\n    setExpenses((prevItem) => {\n      return [receivedData, ...prevItem]      \n    });\n  }\n\n  function inlineStyle() {\n    return(\n      {\n        fontFamily: \"'Questrial', sans-serif\",\n        color: 'white',\n        textAlign: 'center'\n      }\n    );\n  }\n\n  return (\n    <div>\n      <h1 style={inlineStyle()}>Expense Tracker</h1>\n      <NewExpense onAddExpenseData={addExpenseDataHandler}/>\n      <Expenses expenses={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}